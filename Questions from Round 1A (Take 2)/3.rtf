{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf350
{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\fnil\fcharset0 LucidaGrande;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue238;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\paperw11900\paperh16840\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\ql\qnatural

\f0\fs24 \cf0 Turn on the Lights\
\pard\tx220\tx720\pardeftab720\li720\fi-720\ql\qnatural
\ls1\ilvl0\cf0 {\listtext	\'95	}Download input file\
\pard\tx220\tx720\pardeftab720\li720\fi-720\ql\qnatural
\ls1\ilvl0\cf2 {\listtext	\'95	}{\field{\*\fldinst{HYPERLINK "http://www.facebook.com/hackercup/ajax/submit_dialog.php?pid=158877957461506"}}{\fldrslt \ul Submit answers}}\cf0 \
{\listtext	\'95	}-
\f1 \uc0\u8232 
\f0 \
\pard\pardeftab720\ql\qnatural
\cf0 \
A simple game consists of a grid of 
\b R
\b0 x
\b C
\b0  buttons. Each button will be either lighted, or unlighted. Whenever you push a button, the state of that button, and its (up to) four neighbors will toggle -- lighted buttons will become unlighted and unlighted buttons will become lighted. Note that the neighbors do not 'wrap' and thus a corner button has only two neighbors, while an edge buttons has three.\
\
In this problem you will be given an initial configuration of the buttons. Your task is to push the right buttons so that, when you are done, all of the lights are turned on. If there are multiple ways to do this, you should determine the minimum number of buttons pushes that it can be done in.
\b\fs28 \
\pard\pardeftab720\sa280\ql\qnatural
\cf0 Input\
\pard\pardeftab720\ql\qnatural

\b0\fs24 \cf0 You will first read an integer 
\b N
\b0  the number of test cases. For each test case, you will read two integers 
\b R
\b0  and 
\b C
\b0 . This will be followed by 
\b R
\b0  whitespace-separated tokens, each containing 
\b C
\b0  characters. A 'X' indicates a lighted button, while a '.' indicates an unlighted button.
\b\fs28 \
\pard\pardeftab720\sa280\ql\qnatural
\cf0 Constraints\
\pard\tx220\tx720\pardeftab720\li720\fi-720\ql\qnatural
\ls2\ilvl0
\fs24 \cf0 {\listtext	\'95	}N
\b0  = 20\
{\listtext	\'95	}1 \uc0\u8804  
\b R
\b0 ,
\b C
\b0  \uc0\u8804  18\
\pard\pardeftab720\sa280\ql\qnatural

\b\fs28 \cf0 Output\
\pard\pardeftab720\ql\qnatural

\b0\fs24 \cf0 For each test case you should output the minimum number of button presses required to turn on all the lights. If there is no way to do this, you should output -1.\
Example inputExample output\
5\
5 6 XXXXXX XXX.X. XXXXXX X.XXXX XXXXX.\
1 13 ..XXXXXXX.X..\
11 6 XXXXXX XXXXXX XXXXXX XXXXXX XXXXXX XXXXXX XXXXXX .X.XXX XXXX.X XXXXXX XXX.XX\
10 13 ..XX...X.X.X. XX..X..X..... .X........... X........X... .....XX..X.X. .X..XX....... .X.....X.X... .X....X...... ......XX...X. ..X....X.....\
9 3 ... ... ... ... ... ..X ... ... ...\
14\
7\
27\
65\
11\
\
}